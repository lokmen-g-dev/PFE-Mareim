# Save headers and cookies to files
        headers_file = 'headers.txt'
        cookies_file = 'cookies.txt'
        with open(headers_file, 'w') as f:
            for key, value in login_response.headers.items():
                f.write(f'{key}: {value}\n')
        with open(cookies_file, 'w') as f:
            json.dump(login_response.cookies.get_dict(), f)

        # Step 2: Send GET request to fetch system status
        status_url = f'https://{fortigate_ip}/api/v2/monitor/system/status'
        with open(headers_file, 'r') as f:
            headers = dict(line.strip().split(': ', 1) for line in f if ': ' in line)
        with open(cookies_file, 'r') as f:
            cookies = json.load(f)

        status_response = requests.get(status_url, headers=headers, cookies=cookies, verify=False)

        # Save the response to a JSON file
        response_json_file = 'fortigate_status.json'
        with open(response_json_file, 'w') as f:
            json.dump(status_response.json(), f)

        # Save the response to the database
        fortigate_status = FortiGateStatus(response_data=status_response.json())
        fortigate_status.save()

        # Save the policy command to the database
        policy_command = f'curl -k -i -X GET {status_url} -b {headers_file}'
        fortigate_policy = FortiGatePolicy(command=policy_command)
        fortigate_policy.save()

        self.stdout.write(self.style.SUCCESS('Successfully fetched and saved FortiGate status and policy command'))
